package dataworks_public

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ListColumnWithLabelPermission invokes the dataworks_public.ListColumnWithLabelPermission API synchronously
func (client *Client) ListColumnWithLabelPermission(request *ListColumnWithLabelPermissionRequest) (response *ListColumnWithLabelPermissionResponse, err error) {
	response = CreateListColumnWithLabelPermissionResponse()
	err = client.DoAction(request, response)
	return
}

// ListColumnWithLabelPermissionWithChan invokes the dataworks_public.ListColumnWithLabelPermission API asynchronously
func (client *Client) ListColumnWithLabelPermissionWithChan(request *ListColumnWithLabelPermissionRequest) (<-chan *ListColumnWithLabelPermissionResponse, <-chan error) {
	responseChan := make(chan *ListColumnWithLabelPermissionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListColumnWithLabelPermission(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ListColumnWithLabelPermissionWithCallback invokes the dataworks_public.ListColumnWithLabelPermission API asynchronously
func (client *Client) ListColumnWithLabelPermissionWithCallback(request *ListColumnWithLabelPermissionRequest, callback func(response *ListColumnWithLabelPermissionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListColumnWithLabelPermissionResponse
		var err error
		defer close(result)
		response, err = client.ListColumnWithLabelPermission(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ListColumnWithLabelPermissionRequest is the request struct for api ListColumnWithLabelPermission
type ListColumnWithLabelPermissionRequest struct {
	*requests.RpcRequest
	MaxComputeProjectName string           `position:"Query" name:"MaxComputeProjectName"`
	TableName             string           `position:"Query" name:"TableName"`
	UserId                string           `position:"Query" name:"UserId"`
	WorkspaceId           requests.Integer `position:"Query" name:"WorkspaceId"`
	EngineType            string           `position:"Query" name:"EngineType"`
}

// ListColumnWithLabelPermissionResponse is the response struct for api ListColumnWithLabelPermission
type ListColumnWithLabelPermissionResponse struct {
	*responses.BaseResponse
	RequestId  string           `json:"RequestId" xml:"RequestId"`
	ColumnMeta []ColumnMetaItem `json:"ColumnMeta" xml:"ColumnMeta"`
}

// CreateListColumnWithLabelPermissionRequest creates a request to invoke ListColumnWithLabelPermission API
func CreateListColumnWithLabelPermissionRequest() (request *ListColumnWithLabelPermissionRequest) {
	request = &ListColumnWithLabelPermissionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("dataworks-public", "2020-05-18", "ListColumnWithLabelPermission", "", "")
	request.Method = requests.POST
	return
}

// CreateListColumnWithLabelPermissionResponse creates a response to parse from ListColumnWithLabelPermission response
func CreateListColumnWithLabelPermissionResponse() (response *ListColumnWithLabelPermissionResponse) {
	response = &ListColumnWithLabelPermissionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}

package waf_openapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribePayInfo invokes the waf_openapi.DescribePayInfo API synchronously
func (client *Client) DescribePayInfo(request *DescribePayInfoRequest) (response *DescribePayInfoResponse, err error) {
	response = CreateDescribePayInfoResponse()
	err = client.DoAction(request, response)
	return
}

// DescribePayInfoWithChan invokes the waf_openapi.DescribePayInfo API asynchronously
func (client *Client) DescribePayInfoWithChan(request *DescribePayInfoRequest) (<-chan *DescribePayInfoResponse, <-chan error) {
	responseChan := make(chan *DescribePayInfoResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribePayInfo(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribePayInfoWithCallback invokes the waf_openapi.DescribePayInfo API asynchronously
func (client *Client) DescribePayInfoWithCallback(request *DescribePayInfoRequest, callback func(response *DescribePayInfoResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribePayInfoResponse
		var err error
		defer close(result)
		response, err = client.DescribePayInfo(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribePayInfoRequest is the request struct for api DescribePayInfo
type DescribePayInfoRequest struct {
	*requests.RpcRequest
	ResourceGroupId string `position:"Query" name:"ResourceGroupId"`
	SourceIp        string `position:"Query" name:"SourceIp"`
	InstanceSource  string `position:"Query" name:"InstanceSource"`
	Lang            string `position:"Query" name:"Lang"`
	Region          string `position:"Query" name:"Region"`
}

// DescribePayInfoResponse is the response struct for api DescribePayInfo
type DescribePayInfoResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Result    Result `json:"Result" xml:"Result"`
}

// CreateDescribePayInfoRequest creates a request to invoke DescribePayInfo API
func CreateDescribePayInfoRequest() (request *DescribePayInfoRequest) {
	request = &DescribePayInfoRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("waf-openapi", "2018-01-17", "DescribePayInfo", "waf", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribePayInfoResponse creates a response to parse from DescribePayInfo response
func CreateDescribePayInfoResponse() (response *DescribePayInfoResponse) {
	response = &DescribePayInfoResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}

package hitsdb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeHiTSDBInstanceList invokes the hitsdb.DescribeHiTSDBInstanceList API synchronously
func (client *Client) DescribeHiTSDBInstanceList(request *DescribeHiTSDBInstanceListRequest) (response *DescribeHiTSDBInstanceListResponse, err error) {
	response = CreateDescribeHiTSDBInstanceListResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeHiTSDBInstanceListWithChan invokes the hitsdb.DescribeHiTSDBInstanceList API asynchronously
func (client *Client) DescribeHiTSDBInstanceListWithChan(request *DescribeHiTSDBInstanceListRequest) (<-chan *DescribeHiTSDBInstanceListResponse, <-chan error) {
	responseChan := make(chan *DescribeHiTSDBInstanceListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeHiTSDBInstanceList(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeHiTSDBInstanceListWithCallback invokes the hitsdb.DescribeHiTSDBInstanceList API asynchronously
func (client *Client) DescribeHiTSDBInstanceListWithCallback(request *DescribeHiTSDBInstanceListRequest, callback func(response *DescribeHiTSDBInstanceListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeHiTSDBInstanceListResponse
		var err error
		defer close(result)
		response, err = client.DescribeHiTSDBInstanceList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeHiTSDBInstanceListRequest is the request struct for api DescribeHiTSDBInstanceList
type DescribeHiTSDBInstanceListRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	StatusList           string           `position:"Query" name:"StatusList"`
	PageNumber           requests.Integer `position:"Query" name:"PageNumber"`
	SecurityToken        string           `position:"Query" name:"SecurityToken"`
	PageSize             requests.Integer `position:"Query" name:"PageSize"`
	QueryStr             string           `position:"Query" name:"QueryStr"`
	EngineType           string           `position:"Query" name:"EngineType"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeHiTSDBInstanceListResponse is the response struct for api DescribeHiTSDBInstanceList
type DescribeHiTSDBInstanceListResponse struct {
	*responses.BaseResponse
	RequestId    string     `json:"RequestId" xml:"RequestId"`
	PageNumber   int        `json:"PageNumber" xml:"PageNumber"`
	PageSize     int        `json:"PageSize" xml:"PageSize"`
	Total        int        `json:"Total" xml:"Total"`
	InstanceList []Instance `json:"InstanceList" xml:"InstanceList"`
}

// CreateDescribeHiTSDBInstanceListRequest creates a request to invoke DescribeHiTSDBInstanceList API
func CreateDescribeHiTSDBInstanceListRequest() (request *DescribeHiTSDBInstanceListRequest) {
	request = &DescribeHiTSDBInstanceListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("hitsdb", "2017-06-01", "DescribeHiTSDBInstanceList", "hitsdb", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeHiTSDBInstanceListResponse creates a response to parse from DescribeHiTSDBInstanceList response
func CreateDescribeHiTSDBInstanceListResponse() (response *DescribeHiTSDBInstanceListResponse) {
	response = &DescribeHiTSDBInstanceListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}

package elasticsearch

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// Result is a nested struct in elasticsearch response
type Result struct {
	Unit                      string                               `json:"unit" xml:"unit"`
	Endpoints                 string                               `json:"endpoints" xml:"endpoints"`
	IlmPolicy                 string                               `json:"ilmPolicy" xml:"ilmPolicy"`
	Priority                  int                                  `json:"priority" xml:"priority"`
	EndpointName              string                               `json:"endpointName" xml:"endpointName"`
	SpecInfoMap               map[string]interface{}               `json:"specInfoMap" xml:"specInfoMap"`
	OutputES                  string                               `json:"outputES" xml:"outputES"`
	Order                     int64                                `json:"order" xml:"order"`
	Replica                   int                                  `json:"replica" xml:"replica"`
	EndpointDomain            string                               `json:"endpointDomain" xml:"endpointDomain"`
	VpcId                     string                               `json:"vpcId" xml:"vpcId"`
	Connectable               bool                                 `json:"connectable" xml:"connectable"`
	Phases                    map[string]interface{}               `json:"phases" xml:"phases"`
	ZoneCount                 int64                                `json:"zoneCount" xml:"zoneCount"`
	Enable                    bool                                 `json:"enable" xml:"enable"`
	State                     string                               `json:"state" xml:"state"`
	PipelineManagementType    string                               `json:"pipelineManagementType" xml:"pipelineManagementType"`
	DataNode                  bool                                 `json:"dataNode" xml:"dataNode"`
	ReportId                  string                               `json:"reportId" xml:"reportId"`
	Type                      string                               `json:"type" xml:"type"`
	OutputESUserName          string                               `json:"outputESUserName" xml:"outputESUserName"`
	DataStream                bool                                 `json:"dataStream" xml:"dataStream"`
	InstanceId                string                               `json:"instanceId" xml:"instanceId"`
	Description               string                               `json:"description" xml:"description"`
	ServiceId                 string                               `json:"serviceId" xml:"serviceId"`
	InstanceCategory          string                               `json:"InstanceCategory" xml:"InstanceCategory"`
	Trigger                   string                               `json:"trigger" xml:"trigger"`
	VswitchId                 string                               `json:"vswitchId" xml:"vswitchId"`
	EsInstanceId              string                               `json:"esInstanceId" xml:"esInstanceId"`
	ResourceGroupId           string                               `json:"resourceGroupId" xml:"resourceGroupId"`
	Scene                     string                               `json:"scene" xml:"scene"`
	CreatedAt                 string                               `json:"createdAt" xml:"createdAt"`
	EndTime                   int64                                `json:"endTime" xml:"endTime"`
	Config                    map[string]interface{}               `json:"config" xml:"config"`
	Health                    string                               `json:"health" xml:"health"`
	UserName                  string                               `json:"userName" xml:"userName"`
	ResId                     string                               `json:"resId" xml:"resId"`
	Name                      string                               `json:"name" xml:"name"`
	QuartzRegex               string                               `json:"QuartzRegex" xml:"QuartzRegex"`
	EndpointId                string                               `json:"endpointId" xml:"endpointId"`
	DeployedReplica           int64                                `json:"deployedReplica" xml:"deployedReplica"`
	EnablePublic              bool                                 `json:"enablePublic" xml:"enablePublic"`
	OversizedCluster          bool                                 `json:"OversizedCluster" xml:"OversizedCluster"`
	ResourceSpec              string                               `json:"resourceSpec" xml:"resourceSpec"`
	FileSize                  int64                                `json:"fileSize" xml:"fileSize"`
	Value                     int64                                `json:"value" xml:"value"`
	VsArea                    string                               `json:"vsArea" xml:"vsArea"`
	UpdateTime                int64                                `json:"updateTime" xml:"updateTime"`
	Protocol                  string                               `json:"protocol" xml:"protocol"`
	ApmServerDomain           string                               `json:"apmServerDomain" xml:"apmServerDomain"`
	IndexTemplate             string                               `json:"indexTemplate" xml:"indexTemplate"`
	LastDayUsage              int64                                `json:"lastDayUsage" xml:"lastDayUsage"`
	PaymentType               string                               `json:"paymentType" xml:"paymentType"`
	NodeAmount                int64                                `json:"nodeAmount" xml:"nodeAmount"`
	UpdatedAt                 string                               `json:"updatedAt" xml:"updatedAt"`
	OwnerId                   string                               `json:"ownerId" xml:"ownerId"`
	Status                    string                               `json:"status" xml:"status"`
	Version                   string                               `json:"version" xml:"version"`
	Region                    string                               `json:"region" xml:"region"`
	CreateTime                int64                                `json:"createTime" xml:"createTime"`
	Meta                      map[string]interface{}               `json:"_meta" xml:"_meta"`
	CurrentUsage              int64                                `json:"currentUsage" xml:"currentUsage"`
	IndexPatterns             []string                             `json:"indexPatterns" xml:"indexPatterns"`
	ClientSpecs               []string                             `json:"clientSpecs" xml:"clientSpecs"`
	PrivateNetworkIpWhiteList []string                             `json:"privateNetworkIpWhiteList" xml:"privateNetworkIpWhiteList"`
	EsIPWhitelist             []string                             `json:"esIPWhitelist" xml:"esIPWhitelist"`
	PublicIpWhitelist         []string                             `json:"publicIpWhitelist" xml:"publicIpWhitelist"`
	KibanaPrivateIPWhitelist  []string                             `json:"kibanaPrivateIPWhitelist" xml:"kibanaPrivateIPWhitelist"`
	MasterSpecs               []string                             `json:"masterSpecs" xml:"masterSpecs"`
	MasterAmountRange         []string                             `json:"masterAmountRange" xml:"masterAmountRange"`
	Versions                  []string                             `json:"versions" xml:"versions"`
	DataNodeSpecs             []string                             `json:"dataNodeSpecs" xml:"dataNodeSpecs"`
	KibanaIPWhitelist         []string                             `json:"kibanaIPWhitelist" xml:"kibanaIPWhitelist"`
	EsIPBlacklist             []string                             `json:"esIPBlacklist" xml:"esIPBlacklist"`
	KibanaSpecs               []string                             `json:"kibanaSpecs" xml:"kibanaSpecs"`
	PipelineIds               []string                             `json:"pipelineIds" xml:"pipelineIds"`
	NetworkConfig             NetworkConfig                        `json:"networkConfig" xml:"networkConfig"`
	NodeSpec                  NodeSpec                             `json:"nodeSpec" xml:"nodeSpec"`
	DataNodeAmountRange       DataNodeAmountRange                  `json:"dataNodeAmountRange" xml:"dataNodeAmountRange"`
	MetaInfo                  MetaInfo                             `json:"metaInfo" xml:"metaInfo"`
	OssObject                 OssObject                            `json:"ossObject" xml:"ossObject"`
	ElasticExpansionTask      ElasticExpansionTask                 `json:"elasticExpansionTask" xml:"elasticExpansionTask"`
	Template                  TemplateInDescribeDeprecatedTemplate `json:"template" xml:"template"`
	ElasticShrinkTask         ElasticShrinkTask                    `json:"elasticShrinkTask" xml:"elasticShrinkTask"`
	ClientNodeAmountRange     ClientNodeAmountRange                `json:"clientNodeAmountRange" xml:"clientNodeAmountRange"`
	ZoneInfos                 ZoneInfosInCreateLogstash            `json:"zoneInfos" xml:"zoneInfos"`
	DataNodeDiskList          []DataNodeDiskListItem               `json:"dataNodeDiskList" xml:"dataNodeDiskList"`
	NodeConfigurations        []NodeConfigurationsItem             `json:"NodeConfigurations" xml:"NodeConfigurations"`
	DiagnoseItems             []DiagnoseItemsItem                  `json:"diagnoseItems" xml:"diagnoseItems"`
	ExtendConfigs             []ExtendConfigsItem                  `json:"ExtendConfigs" xml:"ExtendConfigs"`
	ClientNodeDiskList        []ClientNodeDiskListItem             `json:"clientNodeDiskList" xml:"clientNodeDiskList"`
	MasterDiskList            []MasterDiskListItem                 `json:"masterDiskList" xml:"masterDiskList"`
	Tags                      TagsInCreateLogstash                 `json:"tags" xml:"tags"`
	EndpointList              EndpointListInCreateLogstash         `json:"endpointList" xml:"endpointList"`
}
